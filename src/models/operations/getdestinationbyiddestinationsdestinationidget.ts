/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetDestinationByIdDestinationsDestinationIdGetRequest = {
  /**
   * The ID of the destination to retrieve.
   */
  destinationId: number;
};

/** @internal */
export const GetDestinationByIdDestinationsDestinationIdGetRequest$inboundSchema:
  z.ZodType<
    GetDestinationByIdDestinationsDestinationIdGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    destination_id: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "destination_id": "destinationId",
    });
  });

/** @internal */
export type GetDestinationByIdDestinationsDestinationIdGetRequest$Outbound = {
  destination_id: number;
};

/** @internal */
export const GetDestinationByIdDestinationsDestinationIdGetRequest$outboundSchema:
  z.ZodType<
    GetDestinationByIdDestinationsDestinationIdGetRequest$Outbound,
    z.ZodTypeDef,
    GetDestinationByIdDestinationsDestinationIdGetRequest
  > = z.object({
    destinationId: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      destinationId: "destination_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDestinationByIdDestinationsDestinationIdGetRequest$ {
  /** @deprecated use `GetDestinationByIdDestinationsDestinationIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetDestinationByIdDestinationsDestinationIdGetRequest$inboundSchema;
  /** @deprecated use `GetDestinationByIdDestinationsDestinationIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetDestinationByIdDestinationsDestinationIdGetRequest$outboundSchema;
  /** @deprecated use `GetDestinationByIdDestinationsDestinationIdGetRequest$Outbound` instead. */
  export type Outbound =
    GetDestinationByIdDestinationsDestinationIdGetRequest$Outbound;
}

export function getDestinationByIdDestinationsDestinationIdGetRequestToJSON(
  getDestinationByIdDestinationsDestinationIdGetRequest:
    GetDestinationByIdDestinationsDestinationIdGetRequest,
): string {
  return JSON.stringify(
    GetDestinationByIdDestinationsDestinationIdGetRequest$outboundSchema.parse(
      getDestinationByIdDestinationsDestinationIdGetRequest,
    ),
  );
}

export function getDestinationByIdDestinationsDestinationIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetDestinationByIdDestinationsDestinationIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetDestinationByIdDestinationsDestinationIdGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetDestinationByIdDestinationsDestinationIdGetRequest' from JSON`,
  );
}
