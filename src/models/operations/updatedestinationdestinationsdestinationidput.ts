/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateDestinationDestinationsDestinationIdPutRequest = {
  /**
   * The ID of the destination to update.
   */
  destinationId: number;
  destination: components.Destination;
};

/** @internal */
export const UpdateDestinationDestinationsDestinationIdPutRequest$inboundSchema:
  z.ZodType<
    UpdateDestinationDestinationsDestinationIdPutRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    destination_id: z.number().int(),
    Destination: components.Destination$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "destination_id": "destinationId",
      "Destination": "destination",
    });
  });

/** @internal */
export type UpdateDestinationDestinationsDestinationIdPutRequest$Outbound = {
  destination_id: number;
  Destination: components.Destination$Outbound;
};

/** @internal */
export const UpdateDestinationDestinationsDestinationIdPutRequest$outboundSchema:
  z.ZodType<
    UpdateDestinationDestinationsDestinationIdPutRequest$Outbound,
    z.ZodTypeDef,
    UpdateDestinationDestinationsDestinationIdPutRequest
  > = z.object({
    destinationId: z.number().int(),
    destination: components.Destination$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      destinationId: "destination_id",
      destination: "Destination",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateDestinationDestinationsDestinationIdPutRequest$ {
  /** @deprecated use `UpdateDestinationDestinationsDestinationIdPutRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateDestinationDestinationsDestinationIdPutRequest$inboundSchema;
  /** @deprecated use `UpdateDestinationDestinationsDestinationIdPutRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateDestinationDestinationsDestinationIdPutRequest$outboundSchema;
  /** @deprecated use `UpdateDestinationDestinationsDestinationIdPutRequest$Outbound` instead. */
  export type Outbound =
    UpdateDestinationDestinationsDestinationIdPutRequest$Outbound;
}

export function updateDestinationDestinationsDestinationIdPutRequestToJSON(
  updateDestinationDestinationsDestinationIdPutRequest:
    UpdateDestinationDestinationsDestinationIdPutRequest,
): string {
  return JSON.stringify(
    UpdateDestinationDestinationsDestinationIdPutRequest$outboundSchema.parse(
      updateDestinationDestinationsDestinationIdPutRequest,
    ),
  );
}

export function updateDestinationDestinationsDestinationIdPutRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateDestinationDestinationsDestinationIdPutRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateDestinationDestinationsDestinationIdPutRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateDestinationDestinationsDestinationIdPutRequest' from JSON`,
  );
}
