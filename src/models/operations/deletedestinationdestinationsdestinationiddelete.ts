/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteDestinationDestinationsDestinationIdDeleteRequest = {
  /**
   * The ID of the destination to delete.
   */
  destinationId: number;
};

/** @internal */
export const DeleteDestinationDestinationsDestinationIdDeleteRequest$inboundSchema:
  z.ZodType<
    DeleteDestinationDestinationsDestinationIdDeleteRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    destination_id: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      "destination_id": "destinationId",
    });
  });

/** @internal */
export type DeleteDestinationDestinationsDestinationIdDeleteRequest$Outbound = {
  destination_id: number;
};

/** @internal */
export const DeleteDestinationDestinationsDestinationIdDeleteRequest$outboundSchema:
  z.ZodType<
    DeleteDestinationDestinationsDestinationIdDeleteRequest$Outbound,
    z.ZodTypeDef,
    DeleteDestinationDestinationsDestinationIdDeleteRequest
  > = z.object({
    destinationId: z.number().int(),
  }).transform((v) => {
    return remap$(v, {
      destinationId: "destination_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDestinationDestinationsDestinationIdDeleteRequest$ {
  /** @deprecated use `DeleteDestinationDestinationsDestinationIdDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteDestinationDestinationsDestinationIdDeleteRequest$inboundSchema;
  /** @deprecated use `DeleteDestinationDestinationsDestinationIdDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteDestinationDestinationsDestinationIdDeleteRequest$outboundSchema;
  /** @deprecated use `DeleteDestinationDestinationsDestinationIdDeleteRequest$Outbound` instead. */
  export type Outbound =
    DeleteDestinationDestinationsDestinationIdDeleteRequest$Outbound;
}

export function deleteDestinationDestinationsDestinationIdDeleteRequestToJSON(
  deleteDestinationDestinationsDestinationIdDeleteRequest:
    DeleteDestinationDestinationsDestinationIdDeleteRequest,
): string {
  return JSON.stringify(
    DeleteDestinationDestinationsDestinationIdDeleteRequest$outboundSchema
      .parse(deleteDestinationDestinationsDestinationIdDeleteRequest),
  );
}

export function deleteDestinationDestinationsDestinationIdDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteDestinationDestinationsDestinationIdDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteDestinationDestinationsDestinationIdDeleteRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteDestinationDestinationsDestinationIdDeleteRequest' from JSON`,
  );
}
